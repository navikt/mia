{
  "extends": ["eslint:recommended"],
  "rules": {
    "no-unexpected-multiline": 2, // - Avoid code that looks like two expressions but is actually one
    "block-scoped-var":2, // - treat var statements as if they were block scoped
    "no-caller": 2, //- disallow use of arguments.caller or arguments.callee
    "no-eval": 2, //- disallow use of eval()
    "no-with":2, //disallow use of the with statement
    "curly":2, //specify curly brace conventions for all control statements
    "eqeqeq": [2, "smart"], // equire the use of === and !==
    "semi": [2, "always"], //require use of semicolons instead of ASI
    "no-eq-null": 0, //- allow comparisons to null without a type-checking operator
    "react/jsx-no-undef": 1, // Disallow unused variables in JSX
    "react/jsx-curly-spacing": 1, // disable spaces inside curly-bracket in JSX
    "react/no-danger": 1, // Prevent usage of dangerous JSX features
    "react/no-deprecated": 1, // Prevent usage of deprecated functions
    "react/jsx-equals-spacing": [2, "never"], // Do not allow spacign around equals-sign in JSX
    "react/jsx-uses-react": 1, // Prevent React from beeing incorrectly marked as unused
    "react/jsx-uses-vars": 1, // Prevent JSX-vars (such as Link) to be incorrectly marked as unused
    "react/jsx-pascal-case": 1, // enforece PascalCase for user-defined modules
    "react/jsx-key": 1, // enforce use of key in JSX-for-loops
    "react/react-in-jsx-scope": 1, // enforece importing of react
    "react/no-set-state": 1, // Present set local state in components
    "react/self-closing-comp": 1 // Prevent extra closing tags for components without children

  },
  "parser": "babel-eslint",
  "global": {
    "ga": true,
    "inject": true,
    "React": true
  },
  "env": {
    "browser": true,
    "es6": true,
    "commonjs": true,
    "node": true,
    "mocha": true
  },
  "ecmaFeatures": {
    "modules": true,
    "jsx": true
  },
  "plugins": [
    "react"
  ]
}
